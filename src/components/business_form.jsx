/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/hZbT6VZPqzS
 */
import React, { useState } from 'react';
import { CardTitle, CardDescription, CardHeader, CardContent, CardFooter, Card } from "@/components/ui/card"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import axios from 'axios';
import Cookies from 'js-cookie';

export function Business_form() {
  const [formData, setFormData] = useState({
    name: '',
    company: '',
    title: '',
    phone: '',
    email: '',
    address: '',
    website: '',
  });

  const handleChange = (e) => {
    const { id, value } = e.target;
    setFormData(prevState => ({
      ...prevState,
      [id]: value,
    }));
  };

const handleSubmit = async (e) => {
  e.preventDefault();
  // Retrieve the token from cookies
  const token = Cookies.get('token'); // Replace 'tokenName' with the actual name of your token
  
  try {
    const response = await axios.post('http://localhost/api/business-cards/store', formData, {
      headers: {
        'Content-Type': 'application/json',
        // 'Accept': 'application/json',
        'Authorization': `Bearer ${token}`, // Include the token in the Authorization header
        // Include other headers as required by your backend
      },
      
      // withCredentials: true, // Necessary for Laravel Sanctum
    });

    console.log(response.data); // Handle success
    
  } catch (error) {
    // console.log(token);
    console.error('Error:', error.response ? error.response.data : error.message); // Handle errors
  }
};

// const handleSubmit = async (e) => {
//   e.preventDefault();
//   try {
//     const response = await fetch('http://localhost/api/business-cards/store', {
//       method: 'POST',
//       headers: {
//         'Content-Type': 'application/json',
//         'Accept': 'application/json',
//         // Include other headers as required by your backend
//       },
//       body: JSON.stringify(formData),
//       // credentials: 'include', // Necessary for Laravel Sanctum
//     });

//     if (!response.ok) {
//       throw new Error('Network response was not ok');
//     }

//     const data = await response.json();
//     console.log(data); // Handle success
//   } catch (error) {
//     console.error('Error:', error); // Handle errors
//   }
// };
// Helper function to get a cookie by name
function getCookie(name) {
  const value = `; ${document.cookie}`;
  const parts = value.split(`; ${name}=`);
  if (parts.length === 2) return parts.pop().split(';').shift();
}
  return (
    <form onSubmit={handleSubmit}>
    <Card className="w-full max-w-lg  justify-center">
      <CardHeader>
        <CardTitle>Business card</CardTitle>
        <CardDescription>Enter your information below.</CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="grid grid-cols-2 gap-4">
          <div className="flex flex-col space-y-1.5">
            <Label htmlFor="name">Name</Label>
            <Input id="name" placeholder="Name" onChange={handleChange} value={formData.name} />
          </div>
          <div className="flex flex-col space-y-1.5">
            <Label htmlFor="company">Company</Label>
            <Input id="company" placeholder="company" onChange={handleChange} value={formData.company} />
          </div>
          <div className="flex flex-col space-y-1.5">
            <Label htmlFor="title">Title</Label>
            <Input id="title" placeholder="title" onChange={handleChange} value={formData.title}/>
          </div>
          <div className="flex flex-col space-y-1.5">
            <Label htmlFor="phone">Phone</Label>
            <Input id="phone" placeholder="phone" type="tel" onChange={handleChange} value={formData.phone}/>
          </div>
          <div className="flex flex-col space-y-1.5">
            <Label htmlFor="email">Email</Label>
            <Input id="email" placeholder="email" type="email" onChange={handleChange} value={formData.email}/>
          </div>
          <div className="flex flex-col space-y-1.5">
            <Label htmlFor="address">Address</Label>
            <Input id="address" placeholder="Address" onChange={handleChange} value={formData.address}/>
          </div>
          <div className="col-start-1 col-span-2 flex flex-col space-y-1.5">
            <Label htmlFor="website">Website</Label>
            <Input id="website" placeholder="Website" type="url" onChange={handleChange} value={formData.website} />
          </div>
        </div>
      </CardContent>
      <CardFooter>
        <Button type = "submit" className="ml-auto">Save</Button>
      </CardFooter>
    </Card>
    </form>
    );
}

export default Business_form;
